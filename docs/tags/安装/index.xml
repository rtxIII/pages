<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安装 on 繠驖瓕III 文章展示</title>
    <link>https://rtx3.com/tags/%E5%AE%89%E8%A3%85/</link>
    <description>Recent content in 安装 on 繠驖瓕III 文章展示</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://rtx3.com/tags/%E5%AE%89%E8%A3%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用阿里云函数计算反向代理AI服务</title>
      <link>https://rtx3.com/post/nginx-proxy-ai/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://rtx3.com/post/nginx-proxy-ai/</guid>
      <description>&lt;h1 id=&#34;使用阿里云函数计算反向代理ai服务&#34;&gt;使用阿里云函数计算反向代理AI服务&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://simonmy.com/&#34;&gt;Simon (Yu Ma)&lt;/a&gt; 收录于 类别 &lt;a href=&#34;https://simonmy.com/categories/%E6%9D%82%E6%8A%80%E6%B5%85%E5%B0%9D.html&#34;&gt;杂技浅尝&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;2023-11-17 00:16 2023-11-17 00:16 约 1076 字  预计阅读 3 分钟 392 次阅读 7 条评论&lt;/p&gt;&#xA;&lt;p&gt;本文的主要思路是使用&lt;code&gt;阿里云&lt;/code&gt;的&lt;code&gt;函数计算服务&lt;/code&gt;来代理 OpenAI 的 API 地址，配合自己的域名即可在境内实现访问。&lt;/p&gt;&#xA;&lt;p&gt;至于是不是永久免费，我不知道。但是每个人都有点免费额度，个人做技术探究应该是够用了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;前期准备&#34;&gt;前期准备&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;需要一个阿里云账号， 没有账号的可自行注册( &lt;a href=&#34;https://account.aliyun.com/register/qr_register.htm?oauth_callback=https%3A%2F%2Fwww.aliyun.com&#34;&gt;点击此处注册&lt;/a&gt; )&lt;/li&gt;&#xA;&lt;li&gt;需要一个自己注册的域名， 没有的可以注册 ( &lt;a href=&#34;https://wanwang.aliyun.com/&#34;&gt;点击注册域名&lt;/a&gt; )&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;创建代理服务&#34;&gt;创建代理服务&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-登录并开通函数计算服务&#34;&gt;1. 登录并开通函数计算服务&lt;/h3&gt;&#xA;&lt;p&gt;登录地址：https://fcnext.console.aliyun.com/overview&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://image.simonmy.com/file/1d6632ef21d3bc90bd433.png&#34;&gt;&lt;img src=&#34;https://image.simonmy.com/file/1d6632ef21d3bc90bd433.png&#34; alt=&#34;https://image.simonmy.com/file/1d6632ef21d3bc90bd433.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-通过模板创建nginx应用&#34;&gt;2. 通过模板创建Nginx应用&lt;/h3&gt;&#xA;&lt;p&gt;这是整个过程中最重要的一步！&lt;/p&gt;&#xA;&lt;p&gt;首先在函数计算管理的应用面板，找到创建应用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://image.simonmy.com/file/7d807fee13a6dad8264b0.png&#34;&gt;&lt;img src=&#34;https://image.simonmy.com/file/7d807fee13a6dad8264b0.png&#34; alt=&#34;https://image.simonmy.com/file/7d807fee13a6dad8264b0.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择 &lt;code&gt;通过模板创建应用&lt;/code&gt;， 在搜索框输入 &lt;code&gt;Nginx&lt;/code&gt; ，找到对应模板 &lt;code&gt;立即创建&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://image.simonmy.com/file/663c870c0944c153a9e7c.png&#34;&gt;&lt;img src=&#34;https://image.simonmy.com/file/663c870c0944c153a9e7c.png&#34; alt=&#34;https://image.simonmy.com/file/663c870c0944c153a9e7c.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;填写一些服务关键信息。 这里要注意一下几个点&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;选择 &lt;code&gt;直接部署&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;区域选择可以访问OpenAI的区域，例如：日本、美国、新加坡等&lt;/li&gt;&#xA;&lt;li&gt;函数名、角色等信息不要修改&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://image.simonmy.com/file/b7575e2fb19e9b5eac059.png&#34;&gt;&lt;img src=&#34;https://image.simonmy.com/file/b7575e2fb19e9b5eac059.png&#34; alt=&#34;https://image.simonmy.com/file/b7575e2fb19e9b5eac059.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-nginx配置修改&#34;&gt;3 Nginx配置修改&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在&lt;code&gt;函数及服务&lt;/code&gt; 面板中，找到刚创建的服务，点击进入 &lt;code&gt;Nginx&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://image.simonmy.com/file/fe4a744210e3e78629c01.png&#34;&gt;&lt;img src=&#34;https://image.simonmy.com/file/fe4a744210e3e78629c01.png&#34; alt=&#34;https://image.simonmy.com/file/fe4a744210e3e78629c01.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择函数代码，并进行编辑，仅修改 &lt;code&gt;nginx.conf&lt;/code&gt; 即可， 代码全文如下:&lt;/p&gt;&#xA;&lt;p&gt;| &lt;code&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40&lt;/code&gt; | &lt;code&gt;# nginx -c /code/nginx.conf -g &#39;daemon off;&#39; events { worker_connections 1024; } http {    server {        error_log  /dev/stderr;        access_log /dev/stdout;         gzip on;        gzip_min_length 1k;        gzip_comp_level 2;        gzip_types text/html text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/svg+xml;        gzip_vary on;        gzip_disable &amp;quot;MSIE [1-6]\.&amp;quot;;        include /etc/nginx/mime.types;        add_header Access-Control-Allow-Origin *;        proxy_set_header Host api.openai.com;        proxy_http_version 1.1;        proxy_set_header Host $host;         listen 9000;         location ~* ^\/v1\/((engines\/.+\/)?(?:chat\/completions|completions|edits|moderations|answers|embeddings))$ {            proxy_pass https://api.openai.com;            proxy_set_header Connection &#39;&#39;;            proxy_read_timeout 8m;            proxy_ignore_headers Cache-Control;            client_body_buffer_size 4m;            proxy_ssl_server_name on;            proxy_ssl_session_reuse off;        }         location /v1 {            proxy_pass https://api.openai.com;            proxy_ssl_server_name on;            proxy_ssl_session_reuse off;        }     } } &lt;/code&gt; |&#xA;| &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; |&#xA;|                                                              |                                                              |&lt;/p&gt;</description>
    </item>
    <item>
      <title>统一登录开源服务安装</title>
      <link>https://rtx3.com/post/casdoor-installation-run/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://rtx3.com/post/casdoor-installation-run/</guid>
      <description>&lt;h1 id=&#34;统一登录开源服务casdoor部署&#34;&gt;统一登录开源服务Casdoor部署&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;统一登录是自动运维的基础以及基石，它可以极大的减少用户的管理成本。&lt;/p&gt;&#xA;&lt;p&gt;常用的统一登录方式有&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AD&lt;/li&gt;&#xA;&lt;li&gt;LDAP&lt;/li&gt;&#xA;&lt;li&gt;CAS&lt;/li&gt;&#xA;&lt;li&gt;OAUTH&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;开源服务提供了大部分的接入方式，并且依赖简单，值得使用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;当使用在生产环境时，需使用K8S等方式实现高可用。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;！当使用在生产环境时，将管理人员使用的登录服务与普通用户使用的登录服务隔离。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;casdoor-features&#34;&gt;Casdoor features&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Casdoor follows a front-end and back-end separate architecture, developed by Golang. It supports high concurrency, provides a web-based UI for management, and supports localization in 10+ languages.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor supports third-party application login, such as GitHub, Google, QQ, and WeChat, and it supports extending third-party login with plugins.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor supports authorization management based on &lt;a href=&#34;https://casbin.org/&#34;&gt;Casbin&lt;/a&gt;. It supports ACL, RBAC, ABAC, and RESTful access control models.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor provides phone verification code, email verification code, and password retrieval functions.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor supports auditing and recording of accessing logs.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor integrates with Alibaba Cloud, Tencent Cloud, and Qiniu Cloud image CDN cloud storage.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor allows customization of registration, login, and password retrieval pages.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor supports integration with existing systems by database synchronization, enabling smooth transition to Casdoor.&lt;/li&gt;&#xA;&lt;li&gt;Casdoor supports mainstream databases such as MySQL, PostgreSQL, and SQL Server, and it supports the extension of new databases with plugins.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;how-casdoor-works&#34;&gt;How Casdoor Works&lt;/h2&gt;&#xA;&lt;p&gt;Casdoor follows the authorization process built upon the OAuth 2.0 protocol. It is highly recommended to have a brief understanding of how OAuth 2.0 works. You can refer to this &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2&#34;&gt;introduction&lt;/a&gt; to OAuth 2.0.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
